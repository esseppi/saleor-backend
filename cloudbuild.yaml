steps:
  # Step to build the django image
  - id: Build-Django
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - 'gcr.io/$PROJECT_ID/esseppi_local_django:$COMMIT_SHA'
      - '-f'
      - ./compose/local/django/Dockerfile
      - .

  # Step to build the postgres image
  - id: Build-Postgres
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - 'gcr.io/$PROJECT_ID/esseppi_local_postgres:$COMMIT_SHA'
      - '-f'
      - ./compose/production/postgres/Dockerfile
      - .

  # Step to push the django image
  - id: Push-Django
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - 'gcr.io/$PROJECT_ID/esseppi_local_django:$COMMIT_SHA'

  # Step to push the postgres image
  - id: Push-Postgres
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - 'gcr.io/$PROJECT_ID/esseppi_local_postgres:$COMMIT_SHA'

  # Apply database migrations
  - id: Apply-Migrations
    name: gcr.io/google-appengine/exec-wrapper
    args:
      [
        '-i',
        'gcr.io/$PROJECT_ID/esseppi_local_django:$COMMIT_SHA',
        '--',
        'python',
        'manage.py',
        'migrate',
      ]

  # Deploy to Cloud Run
  - id: Deploy-Django
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    args:
      - run
      - services
      - update
      - esseppi-django
      - '--image=gcr.io/$PROJECT_ID/esseppi_local_django:$COMMIT_SHA'
      - '--region=$REGION'
      - '--platform=managed'
    entrypoint: gcloud

images:
  - 'gcr.io/$PROJECT_ID/esseppi_local_django:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/esseppi_local_postgres:$COMMIT_SHA'

options:
  substitutionOption: ALLOW_LOOSE

substitutions:
  _SERVICE_NAME: "esseppi-django"
  _REGION: "your-region"
  _COMMIT_SHA: "${COMMIT_SHA}"
  _PROJECT_ID: "${PROJECT_ID}"
